[{"path":"index.html","id":"biodiversidades","chapter":"Biodiversidades","heading":"Biodiversidades","text":"En este manual de prueba se documenta parte del backend de Biodiversidades","code":""},{"path":"git.html","id":"git","chapter":"1 Git","heading":"1 Git","text":"","code":""},{"path":"git.html","id":"instalar-git-y-configurar","chapter":"1 Git","heading":"1.1 Instalar git y configurar","text":"1. Crear cuenta en GitLab o GitHub2. Instalar Git: https://git-scm.com/3. Abrir Git bash4. Configurar Usename escribiendo:git config –-global user.name \"tu user name\"5. Configurar correo escribiendo:git config –-global user.email \"tu user email\"6. Corroborar que se grabó el user name y correo con (Si se necesita puedes salir escribiendo laletra q y enter):git config –-list","code":""},{"path":"git.html","id":"git-gitlab-y-rstudio","chapter":"1 Git","heading":"1.2 Git, GitLab y RStudio","text":"1. Abrimos RStudio2. Nos dirigimos la pestaña de Tools -> Global options -> Git/SVN 3. Generamos una llave SSH (Solo se necesita hacer una ocasión) y la copiamos4. Abrimos GitLab y nos dirigimos Preferences o User settings -> SSH Keys 5. Pegamos el código anterior en la opción key6. Le damos un título y retiramos la fecha de expiración. /7. Finalmente, damos click en Add Key","code":""},{"path":"gitlab-github.html","id":"gitlab-github","chapter":"2 GitLab GitHub","heading":"2 GitLab GitHub","text":"","code":""},{"path":"gitlab-github.html","id":"generar-nuevo-proyecto-gitlab-o-repositorio-github","chapter":"2 GitLab GitHub","heading":"2.1 Generar nuevo proyecto (GitLab) o repositorio (GitHub)","text":"1. GitLab, crear nuevo repositorio.\nPaso 1. Crear nuevo repositorio en GitLab2. Configurar proyecto o repositorioSe deben considerar al menos 4 cosas:Nombre (obligatorio)Nombre (obligatorio)Privacidad (obligatorio)Privacidad (obligatorio)Readme (opcional)Readme (opcional)Click crear :PClick crear :PPaso 2. GitLab","code":""},{"path":"gitlab-github.html","id":"crear-proyecto-en-rstudio","chapter":"2 GitLab GitHub","heading":"2.2 Crear proyecto en RStudio","text":"1. En GitLab o GitHub debes clonar el repositorio en tu maquina haciendo Click en clone2. Copiar el código de SSH o HTTPS.3. Abrir RStudio4. Crear nuevo proyecto 5. Seleccionar Version control6. Seleccionar Git 7. Pegar en Repository URL el código SSH o HTTPS de GitLab, dar un nombre y seleccionar subdirectorio Ver pestaña de Git","code":""},{"path":"gitlab-github.html","id":"push","chapter":"2 GitLab GitHub","heading":"2.3 PUSH","text":"1. Crear un nuevo archivo de R y colocar cualquier cosa, por ejemplo, crear el script de R test.RVer pestaña de GitEl archivo test.R aparece en la pestaña Git. Ahora daremos click en CommitSe despliega una nueva ventana. Seleccionar los archivos que se buscan subir o actualizar en el repositorio de GitLab y marcar (Stage). Escribir un mensaje (Commit message) y hacer click en PushVer pestaña de GitVer pestaña de GitVer pestaña de GitVer pestaña de Git","code":""},{"path":"gitlab-github.html","id":"pull","chapter":"2 GitLab GitHub","heading":"2.4 PULL","text":"1. Abrimos el repositorio de GitLab 2. Editamos el archivo test.RSeleccionar editor y dar clickAgregamos algún comando o texto3. Hacemos un comentario en Commit messages y damos click en Commit changes4. Regresamos nuestro proyecto en RStudio y buscamos nuestra ventana con la pestaña Git que por lo general es la superior derecha.5. Damos click en Pull6. Podemos ver los cambios haciendo click en Diff o en Commit seguido de Changes:\n","code":""},{"path":"organización-de-documentos-y-carpetas-en-el-repositorio.html","id":"organización-de-documentos-y-carpetas-en-el-repositorio","chapter":"3 Organización de documentos y carpetas en el repositorio","heading":"3 Organización de documentos y carpetas en el repositorio","text":"","code":""},{"path":"organización-de-documentos-y-carpetas-en-el-repositorio.html","id":"repositorio","chapter":"3 Organización de documentos y carpetas en el repositorio","heading":"3.1 Repositorio","text":"Este repositorio se puede usar para la generación de tablas, vectores, raster, etc. que sirven principalmente de entrada para las gráficas en la plataforma Biodiversidades.En el repositorio se incluyen entradas, scripts y salidas para el tablero de datos y el tablero geoespacial.Probablemente los usuarios más frecuentes del repositorio sean las personas que programen en la SEE, es por eso que sería de gran valía sugerir un arreglo de archivos y carpetas del repositorio. Si el repositorio y su arreglo se realiza por parte de un externo sería bueno considerar las sugerencias aquí propuestas.Se sugiere que las carpetas y archivos tengan un órden jerárquico y que los nombres de las carpetas inicien con una numeración dos dígitos y guión bajo (p. ej., 00_, 01_, 02_) seguido de nombres cortos, sin espacios y sin acentos.continuación, se enumeran algunas de las sugerencias de arreglo en repositorio:Cuatro carpetas principales, 00_Admin, 01_Entradas, 02_Scripts, 03_Salidas.La carpeta 00_Admin contiene información general que puede ser relevante para entender los archivos de entrada. Los archivos pueden ser, por ejemplo, presentaciones, metadatos de insumos, metadatos de scripts, pruebas, documentos, archivos README, etc. Debido las limitaciones de almacenamiento en los administradores de repositorios se sugiere incorporar archivos de gran tamaño; los archivos de gran tamaño pueden destinarse la carpeta de trabajo en el disco e$(\\gap) (Ver siguiente sección).La carpeta 01_Entradas contiene las subcarpetas 01_Funciones y 02_Temporales.La subcarpeta 01_Funciones contiene funciones de R (formatos: .R, .RData o .rds que se ejecutan con source()) que son usados comúnmente en los scripts de diversas secciones de la plataforma (p.ej., archivo de R que contiene las funciones de consulta al SNIB que se usan en varios indicadores). Mientras que en la subcarpeta 02_temporales se encuentran archivos temporales (archivos vectoriales, raster, tablas o funciones) que son de gran tamaño y que son de utilidad para correr de forma fluida los scripts de R. Los archivos de gran tamaño se recomienda alojarlos en la carpeta de trabajo en el disco e$(\\gap) (Ver sección 4).La carpeta 02_Scripts tiene dos subcarpetas que corresponden al Tablero de datos (01_Tablero_datos) y al Tablero geoespacial (02_Tablero_geoespacial). Dentro de cada carpeta existe un archivo .R o script (“Leader”) con las líneas de código necesarias para el procesamiento de todos los elementos/indicadores que permiten obtener las salidas para implementar los gráficos o mapas de los tableros. Para correr los scripts de los temas basta con usar la función source() (para obtener más información consultar la presentación Arreglo jerárquico).En las subcarpetas 01_Tablero_datos y 02_Tablero_geoespacial, se integran otras cuatro carpetas que corresponden los cuatro grandes temas de la plataforma BiodiversidadES (01_Conocimiento, 02_Cambio_global, 03_Avances_hacia_sustentabilidad, 04_Escenarios).La carpeta 03_Salidas contiene las salidas de los scripts de R contenidos en la carpeta 02_Scripts. Los formatos de salida serán acordados con el programador de la plataforma BriodiversidadES, sin embargo, los formatos más usuales son vectoriales, tablas e imágenes. La carpeta 03_Salidas contiene dos subcarpetas que corresponden al Tablero de datos (01_Tablero_datos) y al Tablero geoespacial (02_Tablero_geoespacial). Cada carpeta contiene cuatro carpetas que corresponden los cuatro grandes temas de la plataforma BiodiversidadES y su vez estas cuatro carpetas contienen carpetas con el nombre de las secciones.","code":""}]
